version: '3.8'

services:
  apm-server:
    image: docker.elastic.co/apm/apm-server:7.15.1
    depends_on:
      elasticsearch:
        condition: service_healthy
      kibana:
        condition: service_healthy
    cap_add: ["CHOWN", "DAC_OVERRIDE", "SETGID", "SETUID"]
    cap_drop: ["ALL"]
    ports:
    - 8200:8200
    networks:
    - netapm
    - netmyapplication
    command: >
       apm-server -e
         -E apm-server.rum.enabled=true
         -E setup.kibana.host=kibana:5601
         -E setup.template.settings.index.number_of_replicas=0
         -E apm-server.kibana.enabled=true
         -E apm-server.kibana.host=kibana:5601
         -E output.elasticsearch.hosts=["elasticsearch:9200"]
    healthcheck:
      interval: 10s
      retries: 12
      test: curl --write-out 'HTTP %{http_code}' --fail --silent --output /dev/null http://localhost:8200/

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.15.1
    environment:
    - bootstrap.memory_lock=true
    - cluster.name=docker-cluster
    - cluster.routing.allocation.disk.threshold_enabled=false
    - discovery.type=single-node
    - ES_JAVA_OPTS=-XX:UseAVX=2 -Xms1g -Xmx1g
    ulimits:
      memlock:
        hard: -1
        soft: -1
    volumes:
    - esdata:/usr/share/elasticsearch/data
    ports:
    - 9200:9200
    networks:
    - netapm
    healthcheck:
      interval: 20s
      retries: 10
      test: curl -s http://localhost:9200/_cluster/health | grep -vq '"status":"red"'

  kibana:
    image: docker.elastic.co/kibana/kibana:7.15.1
    depends_on:
      elasticsearch:
        condition: service_healthy
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    ports:
    - 5601:5601
    networks:
    - netapm
    healthcheck:
      interval: 10s
      retries: 20
      test: curl --write-out 'HTTP %{http_code}' --fail --silent --output /dev/null http://localhost:5601/api/status
  
  benimapi:
    image: elastikeypiem/benimapi
    build:
      context: .
      dockerfile: ../BenimApi/Dockerfile
    depends_on:
    - benimsql
    - apm-server
    environment:
    - ElasticApm__ServerUrl=http://apm-server:8200
    - ConnectionStrings__BenimDbContext=Server=benimsql,1433;Database=BenimDb;User Id=sa;Password=Very300!SecretKaraKutu
    ports:
    - 16580:80
    - 16581:81
    networks:
    - netmyapplication

  webapp:
    image: elastikeypiem/webapp
    build:
      context: .
      dockerfile: ../WebApp/Dockerfile
    depends_on:
    - benimapi
    environment:
    - ElasticApm__ServerUrl=http://apm-server:8200
    - BenimApiUrl=http://benimapi
    - BenimApiGrpcUrl=http://benimapi:81
    ports:
    - 16443:443
    networks:
    - netmyapplication

  benimsql:
    image: "mcr.microsoft.com/mssql/server:2019-latest"
    environment:
      SA_PASSWORD: "Very300!SecretKaraKutu"
      MSSQL_PID: "Developer"
      MSSQL_TCP_PORT: "1433"
      ACCEPT_EULA: "Y"
    expose:
    - 1433
    volumes:
    - elastik-sqldata:/var/opt/mssql
    networks:
    - netmyapplication

volumes:
  esdata:
    driver: local
  elastik-sqldata:
    external: false

networks:
  netapm:
    driver: bridge
  netmyapplication:
    driver: bridge